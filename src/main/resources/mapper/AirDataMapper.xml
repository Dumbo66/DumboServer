<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dumbo.server.dao.AirDataDao">
  <resultMap id="BaseResultMap" type="com.dumbo.server.entity.AirData">
    <id column="data_id" jdbcType="INTEGER" property="dataId" />
    <result column="site_id" jdbcType="VARCHAR" property="siteId" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="air_temperature" jdbcType="REAL" property="airTemperature" />
    <result column="air_humid" jdbcType="REAL" property="airHumid" />
    <result column="light_intensity" jdbcType="REAL" property="lightIntensity" />
    <result column="pm10" jdbcType="REAL" property="pm10" />
    <result column="pm2_5" jdbcType="REAL" property="pm25" />
    <result column="voc" jdbcType="REAL" property="voc" />
    <result column="co" jdbcType="REAL" property="co" />
    <result column="co2" jdbcType="REAL" property="co2" />
    <result column="no2" jdbcType="REAL" property="no2" />
    <result column="so2" jdbcType="REAL" property="so2" />
    <result column="o3" jdbcType="REAL" property="o3" />
    <result column="dust_concentration" jdbcType="REAL" property="dustConcentration" />
  </resultMap>

  <resultMap id="PreOneHourDataAvgResultMap" type="com.dumbo.server.entity.AirData">
    <id column="data_id" jdbcType="INTEGER" property="dataId" />
    <result column="siteId" jdbcType="VARCHAR" property="siteId" />
    <result column="date_sub(date_format(now(), '%Y-%m-%d %H:00:00'),INTERVAL 1 HOUR)" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="ROUND(AVG(air_temperature),2)" jdbcType="REAL" property="airTemperature" />
    <result column="ROUND(AVG(air_humid),2)" jdbcType="REAL" property="airHumid" />
    <result column="ROUND(AVG(light_intensity),2)" jdbcType="REAL" property="lightIntensity" />
    <result column="ROUND(AVG(pm10),2)" jdbcType="REAL" property="pm10" />
    <result column="ROUND(AVG(pm2_5),2)" jdbcType="REAL" property="pm25" />
    <result column="ROUND(AVG(voc),2)" jdbcType="REAL" property="voc" />
    <result column="ROUND(AVG(co),2)" jdbcType="REAL" property="co" />
    <result column="ROUND(AVG(co2),2)" jdbcType="REAL" property="co2" />
    <result column="ROUND(AVG(no2),2)" jdbcType="REAL" property="no2" />
    <result column="ROUND(AVG(so2),2)" jdbcType="REAL" property="so2" />
    <result column="ROUND(AVG(o3),2)" jdbcType="REAL" property="o3" />
    <result column="ROUND(AVG(dust_concentration),2)" jdbcType="REAL" property="dustConcentration" />
  </resultMap>

  <resultMap id="PerHourDataAvgResultMap" type="com.dumbo.server.entity.AirData">
    <id column="data_id" jdbcType="INTEGER" property="dataId" />
    <result column="site_id" jdbcType="VARCHAR" property="siteId" />
    <result column="date_sub(date_format(now(), '%Y-%m-%d %H:00:00'),INTERVAL 1 HOUR)" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="ROUND(AVG(air_temperature),2)" jdbcType="REAL" property="airTemperature" />
    <result column="ROUND(AVG(air_humid),2)" jdbcType="REAL" property="airHumid" />
    <result column="ROUND(AVG(light_intensity),2)" jdbcType="REAL" property="lightIntensity" />
    <result column="ROUND(AVG(pm10),2)" jdbcType="REAL" property="pm10" />
    <result column="ROUND(AVG(pm2_5),2)" jdbcType="REAL" property="pm25" />
    <result column="ROUND(AVG(voc),2)" jdbcType="REAL" property="voc" />
    <result column="ROUND(AVG(co),2)" jdbcType="REAL" property="co" />
    <result column="ROUND(AVG(co2),2)" jdbcType="REAL" property="co2" />
    <result column="ROUND(AVG(no2),2)" jdbcType="REAL" property="no2" />
    <result column="ROUND(AVG(so2),2)" jdbcType="REAL" property="so2" />
    <result column="ROUND(AVG(o3),2)" jdbcType="REAL" property="o3" />
    <result column="ROUND(AVG(dust_concentration),2)" jdbcType="REAL" property="dustConcentration" />
  </resultMap>

  <sql id="Base_Column_List">
    data_id, site_id, record_time, air_temperature, air_humid, light_intensity, pm10,
    pm2_5, voc, co, co2, no2, so2, o3, dust_concentration
  </sql>

  <!--查询某站点最新监测数据-->
  <select id="selectLatestData" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid = "Base_Column_List" />
    FROM
    air_data
    WHERE
    site_id = #{siteId,jdbcType=VARCHAR}
    order by record_time desc limit 1;
  </select>

  <!--查询所有站点最新监测数据-->
  <select id="selectAllLatestData" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid = "Base_Column_List" />
    FROM
    air_data
    ORDER BY
    record_time DESC,
    site_id
    LIMIT #{count};
  </select>

  <!--查询某站点最近一小时平均监测数据-->
  <select id="selectPreOneHourDataAvg"  parameterType="java.lang.String" resultMap="PreOneHourDataAvgResultMap">
        SELECT
            site_id,
            date_sub(date_format(now(), '%Y-%m-%d %H:00:00'),INTERVAL 1 HOUR),
            ROUND(AVG(air_temperature),2),
            ROUND(AVG(air_humid),2),
            ROUND(AVG(light_intensity),2),
            ROUND(AVG(pm10),2),
            ROUND(AVG(pm2_5),2),
            ROUND(AVG(voc),2),
            ROUND(AVG(co),2),
            ROUND(AVG(co2),2),
            ROUND(AVG(no2),2),
            ROUND(AVG(so2),2),
            ROUND(AVG(o3),2),
            ROUND(AVG(dust_concentration),2)
        FROM
            air_data
        WHERE
            site_id = #{siteId,jdbcType=VARCHAR}
            AND record_time BETWEEN date_sub(
                    date_format(now(), '%Y-%m-%d %H:00:00'),
                    INTERVAL 1 HOUR
            )
            AND date_format(now(), '%Y-%m-%d %H:00:00');
    </select>

  <!--查询某站点当天每小时平均监测数据-->
  <select id="selectPerHourDataAvg"  parameterType="map" resultMap="PerHourDataAvgResultMap">
        SELECT
            site_id,
            date_sub(date_format(now(), '%Y-%m-%d %H:00:00'),INTERVAL 1 HOUR),
            ROUND(AVG(air_temperature),2),
            ROUND(AVG(air_humid),2),
            ROUND(AVG(light_intensity),2),
            ROUND(AVG(pm10),2),
            ROUND(AVG(pm2_5),2),
            ROUND(AVG(voc),2),
            ROUND(AVG(co),2),
            ROUND(AVG(co2),2),
            ROUND(AVG(no2),2),
            ROUND(AVG(so2),2),
            ROUND(AVG(o3),2),
            ROUND(AVG(dust_concentration),2)
        FROM
            air_data
        WHERE
            TO_DAYS(record_time) = TO_DAYS(#{date})
            AND site_id = #{siteId,jdbcType=VARCHAR}
        GROUP BY
            HOUR (record_time);
    </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from air_data
    where data_id = #{dataId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from air_data
    where data_id = #{dataId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.dumbo.server.entity.AirData">
    insert into air_data (data_id, site_id, record_time,
      air_temperature, air_humid, light_intensity, 
      pm10, pm2_5, voc, co, 
      co2, no2, so2, o3, 
      dust_concentration)
    values (#{dataId,jdbcType=INTEGER}, #{siteId,jdbcType=VARCHAR}, #{recordTime,jdbcType=TIMESTAMP},
      #{airTemperature,jdbcType=REAL}, #{airHumid,jdbcType=REAL}, #{lightIntensity,jdbcType=REAL}, 
      #{pm10,jdbcType=REAL}, #{pm25,jdbcType=REAL}, #{voc,jdbcType=REAL}, #{co,jdbcType=REAL}, 
      #{co2,jdbcType=REAL}, #{no2,jdbcType=REAL}, #{so2,jdbcType=REAL}, #{o3,jdbcType=REAL}, 
      #{dustConcentration,jdbcType=REAL})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.dumbo.server.entity.AirData">
    update air_data
    set site_id = #{siteId,jdbcType=VARCHAR},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      air_temperature = #{airTemperature,jdbcType=REAL},
      air_humid = #{airHumid,jdbcType=REAL},
      light_intensity = #{lightIntensity,jdbcType=REAL},
      pm10 = #{pm10,jdbcType=REAL},
      pm2_5 = #{pm25,jdbcType=REAL},
      voc = #{voc,jdbcType=REAL},
      co = #{co,jdbcType=REAL},
      co2 = #{co2,jdbcType=REAL},
      no2 = #{no2,jdbcType=REAL},
      so2 = #{so2,jdbcType=REAL},
      o3 = #{o3,jdbcType=REAL},
      dust_concentration = #{dustConcentration,jdbcType=REAL}
    where data_id = #{dataId,jdbcType=INTEGER}
  </update>
</mapper>